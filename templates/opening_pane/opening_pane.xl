// *****************************************************************************
// opening_pane.xl                                                 Tao3D project
// *****************************************************************************
//
// File description:
//
//     Library for opening_pane template.
//     Uses flowers.xl file for background drawing.
//
//
//
//
//
//
//
// *****************************************************************************
// This software is licensed under the GNU General Public License v3
// (C) 2012, Catherine Burvelle <catherine@taodyne.com>
// (C) 2014,2019, Christophe de Dinechin <christophe@dinechin.org>
// (C) 2012-2013, Jérôme Forissier <jerome@taodyne.com>
// (C) 2012, Soulisse Baptiste <baptiste.soulisse@taodyne.com>
// *****************************************************************************
// This file is part of Tao3D
//
// Tao3D is free software: you can r redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Tao3D is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Tao3D, in a file named COPYING.
// If not, see <https://www.gnu.org/licenses/>.
// *****************************************************************************

import Animate 1.0
import "flowers.xl"

// ============================================================================
//
//                                 CONFIGURATION
//
// ============================================================================


font "op_text" -> font "Baskerville", 58
font "op_keyword" -> font "Arial Rounded MT Bold", 58
color "story" -> color "white"
line_color "story"-> line_color "white"

// Logical dimensions for the slide. You can put anything you want here,
// but the aspect ratio should match that of the background picture and be
// close to the aspect ratio of the screens you are going to use.
// This will be used to define the logical coordinates of anything that
// follows "scale_contents".
slide_width -> 1920.0
slide_height -> 1200.0

// boxes scroll on time or on key down.
scroll -> "step"
// Steps are seconds
time_scroll -> scroll := "time"
// Steps are key down events.
key_scroll -> scroll := "step"

do_scroll ->
    if scroll = "step" then
        smooth_step
    else
        page_time


// ============================================================================
//
//                                  SLIDES
//
// ============================================================================

slide T:text, Body ->
    page T,
        if scroll = "step" then
            compute_smooth_step
        background -1000
        scale_contents
        locally Body

// ============================================================================
//
//                                 FUNCTIONS
//
// ============================================================================


op_story Start:real,End:real,Hue:real,X:real,Y:real,W:real,H:real,Body ->
// ----------------------------------------------------------------------------
//   Draw a story box
// ----------------------------------------------------------------------------
// The box is shown from step "Start" to step "End",
// The background color has the given "Hue".
// The box is located in "X", "Y" with size "W"x"H"
// The box displays the "Body"
    if do_scroll >= Start-1 and do_scroll <= End+1 then
        locally
            SW->1.0
            SH->1.0

            if W > H then
                SW := fade_between(do_scroll, Start, End)
                SH := 1.0
            else
                SW := 1.0
                SH := fade_between(do_scroll, Start, End)

            if SW > 0.01 and SH > 0.01 then
                color_hsv Hue, 0.8, 0.4, 0.5
                rounded_rectangle X, Y, W*SW+20, H*SH+20, 20

                color "story"
                frame_texture 2*W*SW, 2*H*SH,
                    text_box 0, 0, 2*W, 2*H,
                        align 0
                        vertical_align 0.5
                        Body
                rectangle X, Y, W*SW, H*SH


op_bullet Step:real, T:text ->
// ----------------------------------------------------------------------------
//   Draw a given bullet
// ----------------------------------------------------------------------------
// The text "T" appears after the step Step
    paragraph_break
    show fade_at(do_scroll, Step)
    font "op_text"
    anchor
        translate -20, 12, 0
        rotatey 150 * page_time
        color "story", 0.6
        line_color "story"
        line_width 1.5
        circle 0, 0, 9
    text T


op_keyword T:text ->
// ----------------------------------------------------------------------------
//   Display the keywords for a given box
// ----------------------------------------------------------------------------
    font "op_keyword"
    text T


op_text T:text ->
// ----------------------------------------------------------------------------
//   Display text in a glass box
// ----------------------------------------------------------------------------
    font "op_text"
    text T


background Z ->
// ----------------------------------------------------------------------------
//   Draw the background in Z depth
// ----------------------------------------------------------------------------
    locally
        scale_background
        ztrans_background -10000
        show 0.3
        locally
            line_color "transparent"
            translate 0, -slide_height / 2, 0
            locally
                rotatez -35
                scale3 10
                leaf2 -25, 0, 0
                rotatez -60
                leaf2 -25, 0, 0
                rotatez -60
                leaf2 -25, 0, 0
            locally
                translatey 100
                color watermark
                circle   0, 0, 30
                circle 100, 0, 20
                rotatez 36
                circle  90, 0, 20
                rotatez 36
                circle  80, 0, 20
                rotatez 36
                circle  80, 0, 20
                rotatez 36
                circle  90, 0, 20
                rotatez 36
                circle 100, 0, 20

            locally
                rotatez 25
                arabesque 500, 400, 0
            locally
                translate -300, 570, 0
                rotatey 180
                rotatez 20
                arabesque 0, 0, 0

        flower2 -500, -150, 0
        flower2  500,  150, 0
        flower3  600, -500, 0
        flower3 -650, -500, 0
        flower3  300,  300, 0
        flower  -200,  400, 0
        flower  -450,  100, 0
        flower   250,  500, 0
        flower   450, -150, 0
        flower  -350, -250, 0


        fall time,
            rotatez 90
            leaf1 0, 0, 0

        fall time+15,
            translatex 300
            rotatez 90
            leaf1 0, 0, 0

        fall time+25,
            translatex -400
            rotatez 90
            leaf1 0, 0, 0

        fall time+10,
            translatex -600
            rotatez 90
            leaf1 0, 0, 0

        fall time+20,
            translatex 500
            rotatez 90
            leaf1 0, 0, 0


// ============================================================================
//
//                                 GENERAL
//
// ============================================================================

// Two ways to scale contents when resizing the window :
// For background pictures, we'd rather not see some white around them,
// so we scale to crop the picture ("max").
// For contents, on the other hand, we want to keep everything visible, so
// we scale to fit the contents ("min").
scale3 S:real -> scale S, S, S
background_scale -> max(window_width/slide_width, window_height/slide_height)
contents_scale -> min(window_width/slide_width, window_height/slide_height)
scale_background -> scale3 background_scale
scale_contents -> scale3 contents_scale

// Z translation without change in dimensions
ztrans_contents Z:real ->
    Z0 -> 6000.0
    Z0 := camera_position at 3
    translatez Z/contents_scale
    scale3 (Z0-Z)/Z0

ztrans_background Z:real ->
    Z0 -> 6000.0
    Z0 := camera_position at 3
    translatez Z/background_scale
    scale3 (Z0-Z)/Z0


// ============================================================================
//
//                            LANGUAGE MANAGEMENT
//
// ============================================================================

lang -> ""
Fr:text en En:text -> trx lang, En, Fr
En:text fr Fr:text -> trx lang, En, Fr
trx "", En:text, Fr:text -> trx tao_language, En, Fr
trx "fr", En:text, Fr:text -> Fr
trx Other:text, En:text, Fr:text -> En
french Body -> if lang = "fr" then Body
english Body -> if lang = "en" then Body
language L:text -> lang := L; refresh 0.1
