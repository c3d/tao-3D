# Makefile to build a MacOSX installer (.dmg)
#
# The application is distributed as a disk image (.dmg) which
# contains an application bundle (Tao3D*.app).
#
# To build the package, this Makefile goes through the following
# steps:
#   - run "make install" at the top level of the Tao project
#   - copy the installation directory under ./build_root
#   - run deployqt on ./build_root to import Qt frameworks
#   - if Git is enabled:
#     - download and build git under ./git_build
#     - install git under ./build_root
#   - if the module SDK is enabled:
#     - create and copy the SDK directory
#   - create the DMG from ./buid_root
#
# Usage:
#   make kit
#   make prepare    # Prepare application in build_root for .dmg creation
#   make clean      # Won't remove Git source package
#   make veryclean  # Will remove Git source

########

include Makefile.config

ifndef PACKAGE_NOGIT

GIT_VERSION=1.9.0

# Warning: GIT_DESTDIR can't contain spaces
GIT_DESTDIR=$(shell pwd)/git_build/install
GIT_DEST=$(shell pwd)/build_root/$(APP_NAME).app/Contents/MacOS/git
define git-makeparms
CFLAGS=NO_DARWIN_PORTS=1 NO_GETTEXT=1 NO_INSTALL_HARDLINKS=1 \
NO_PERL=1 NO_PYTHON=1 NO_TCLTK=1 prefix=/usr/local DESTDIR=$(GIT_DESTDIR)
endef

MAYBE_GIT_INSTALL   = .git_install_ts
MAYBE_GIT_CLEAN     = clean.git
MAYBE_GIT_VERYCLEAN = veryclean.git

endif

ifdef PACKAGE_APPEND
APPENDSTR=$(PACKAGE_APPEND) # ends with one space - do not remove this comment!
endif
VOLNAME=Tao3D $(APPENDSTR)$(shell ../../tao/updaterev.sh -n)
DMG=$(VOLNAME).$(ARCH).dmg

kit: .dmg_ts

$(DMG) .dmg_ts: prepare
	rm -f tao.dmg "Tao3D"*.dmg
	./create_dmg --volname "$(VOLNAME)" \
	    --volicon VolumeIcon.icns \
	    --background-color 35512 44800 65535 \
	    --icon-size 140 \
	    --window-pos 450 200 \
	    --window-size 400 250 --icon "$(APP_NAME)" 100 115 \
	    --app-drop-link 300 115 --no-internet-enable \
	    "$(DMG)" build_root
	touch .dmg_ts

prepare: .tao_install_ts $(MAYBE_GIT_INSTALL) .cp_sdk_ts

clean: $(MAYBE_GIT_CLEAN) clean.tao clean.dmg clean.cp_sdk

veryclean: clean $(MAYBE_GIT_VERYCLEAN)

clean.dmg:
	rm -f "$(DMG)" .dmg_ts

########

.cp_sdk_ts: .tao_install_ts
ifndef NO_SDK
	mkdir -p "build_root/$(APP_NAME).app/Contents/MacOS"
	$(MAKE) -C ../.. -f Makefile.sdk
	cp -Rp ../../sdk "build_root/$(APP_NAME).app/Contents/MacOS"
	touch $@
endif

clean.cp_sdk:
	rm -rf "build_root/$(APP_NAME).app/Contents/MacOS/sdk"
	rm -f .cp_sdk_ts

########

.tao_install_ts: .tao_install_prog_ts .tao_install_deps_ts

clean.tao_install: clean.tao_install_prog clean.tao_install_deps
	rm -f .tao_install_ts

########

.tao_install_deps_ts: .tao_install_prog_ts
	PACKAGE_NO_QTWEBKIT=$(PACKAGE_NO_QTWEBKIT) ./deployqt "build_root/$(APP_NAME).app" "$(QMAKE_LIBDIR_QT)"

clean.tao_install_deps:
	rm -f .tao_install_deps_ts

########

.tao_install_prog_ts:
	mkdir -p build_root
	cd ../.. && $(MAKE) install
	cp -Rp $(INSTROOT)/* build_root

clean.tao_install_prog:
	rm -rf "build_root/$(APP_NAME).app"
	rm -f .tao_install_prog_ts

########

clean.tao: clean.tao_install
	rm -rf build_root

########

ifndef PACKAGE_NOGIT

.git_install_ts: .git_build_ts
	mkdir -p "$(GIT_DEST)"
	ln -sf "$(GIT_DEST)" $(GIT_DESTDIR)
	$(MAKE) -C git_build/git-$(GIT_VERSION) $(git-makeparms) install
	touch $@

clean.git_install:
	rm -rf $(GIT_DESTDIR) "$(GIT_DEST)"
	rm -f .git_install_ts

########

.git_build_ts: .git_extract_ts
	$(MAKE) -C git_build/git-$(GIT_VERSION) $(git-makeparms)
	$(MAKE) -C git_build/git-$(GIT_VERSION) $(git-makeparms) strip
	touch .git_build_ts

clean.git_build:
	rm -f .git_build_ts

########

.git_extract_ts: git_build/git-$(GIT_VERSION).tar.gz
	[ -d git_build/git-$(GIT_VERSION) ] || ( cd git_build ; tar zxf git-$(GIT_VERSION).tar.gz )
	touch $@

clean.git_extract:
	rm -rf git_build/git-$(GIT_VERSION)
	rm -f .git_extract_ts

########

git_build/git-$(GIT_VERSION).tar.gz:
	[ -d git_build ] || mkdir -p git_build
	[ -f git_build/git-$(GIT_VERSION).tar.gz ] || ( cd git_build ; curl -O http://git-core.googlecode.com/files/git-$(GIT_VERSION).tar.gz )

clean.git_download:
	rm -rf git_build/git-$(GIT_VERSION).tar.gz

########

clean.git: clean.git_extract clean.git_build clean.git_install

veryclean.git: clean.git clean.git_download

endif # !PACKAGE_NOGIT
