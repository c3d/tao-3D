// *****************************************************************************
// slides.xl                                                       Tao3D project
// *****************************************************************************
//
// File description:
//
//     Slide module definition
//
//     This provides the various features you need to build slides easily
//     using a simple wiki-like language
//
//
//
//
//
//
// *****************************************************************************
// This software is licensed under the GNU General Public License v3
// (C) 2011-2013, Baptiste Soulisse <baptiste.soulisse@taodyne.com>
// (C) 2011, Catherine Burvelle <catherine@taodyne.com>
// (C) 2011-2014,2019, Christophe de Dinechin <christophe@dinechin.org>
// (C) 2011-2014, Jérôme Forissier <jerome@taodyne.com>
// (C) 2011-2013, Baptiste Soulisse <baptiste.soulisse@taodyne.com>
// *****************************************************************************
// This file is part of Tao3D
//
// Tao3D is free software: you can r redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Tao3D is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Tao3D, in a file named COPYING.
// If not, see <https://www.gnu.org/licenses/>.
// *****************************************************************************

module_description
    id "70C61E75-4CE2-4020-9E76-797763482B56"
    name "Slides"
    description "Commands to create easily presentations " &
                "with some classic slides."
    import_name "Slides"
    author "Taodyne SAS"
    website "http://www.taodyne.com"
    version 1.043

module_description "fr",
    name "Diapositives"
    description "Commandes pour créer facilement des présentations " &
                "avec des diapositives traditionnelles."

// This file is designed to be overriden
override_priority -1

// We use prefix operators as markup for bullets, add a syntax for it
syntax
    PREFIX     370     ** *** ****
    PREFIX     370     ++ +++ ++++
    PREFIX     370     -- --- ----
    INFIX      500     en fr de it es


// Adding this module's images/ directory to the image: search path
// for the current document
add_search_path "image:", module_dir & "/images"



// ============================================================================
// 
//    Language management
// 
// ============================================================================

lang -> "en"
lang L:text ->
// ----------------------------------------------------------------------------
//   Select a language for the slides
// ----------------------------------------------------------------------------
    lang := L

// ----------------------------------------------------------------------------
//   Initialize slides language to the language of the Tao user interface
// ----------------------------------------------------------------------------
once { lang tao_language }

// Select one language among many
Other:text en En:text -> if lang = "en" then En else Other
Other:text fr Fr:text -> if lang = "fr" then Fr else Other
Other:text de De:text -> if lang = "de" then De else Other
Other:text it It:text -> if lang = "it" then It else Other
Other:text es Es:text -> if lang = "es" then Es else Other

// Select language-dependent content
english Body -> if lang = "en" then Body 
french  Body -> if lang = "fr" then Body 
german  Body -> if lang = "de" then Body
italian Body -> if lang = "it" then Body
spanish Body -> if lang = "es" then Body



// ============================================================================
//
//    Theme selection
//
// ============================================================================

theme -> "default"
theme T:text ->
// ----------------------------------------------------------------------------
//   Select a theme name
// ----------------------------------------------------------------------------
    theme := T


// Define the default theme
import "default-theme.xl"



// ============================================================================
//
//   Slide size
//
// ============================================================================

// Logical dimensions for the slide. You can put anything you want here,
// but the aspect ratio should match that of the background picture and be
// close to the aspect ratio of the screens you are going to use.
// This will be used to define the logical coordinates of anything that
// follows "scale_contents".
// Here, we use the size of our background picture
slide_width  -> theme_slide_width theme
slide_height -> theme_slide_height theme

set_slide_size Width:real, Height:real ->
// ----------------------------------------------------------------------------
//   Change the dimension of a slide
// ----------------------------------------------------------------------------
    slide_width := Width
    slide_height := Height



// ============================================================================
// 
//   Slide kinds
// 
// ============================================================================

slide_master -> ""
slide_master Theme:text, Master:text, Title:text, Body ->
// ----------------------------------------------------------------------------
//    Draw a slide with a given master style
// ----------------------------------------------------------------------------
   page Title,
       old_theme -> ""
       old_theme := Theme
       theme_background Theme, Master
       locally
           layout "ThemeReset"
           slide_master := Master
           theme_reset theme
           slide_reset theme
           Body
       theme_layout Theme, Master
       // User changed theme from within slide : refresh whole slide
       if theme <> old_theme then refresh 0



// ============================================================================
//
//   Slide formats
//
// ============================================================================

base_slide Title:text, Body ->
// ----------------------------------------------------------------------------
//   Create an empty slide
// ----------------------------------------------------------------------------
    slide_master theme, "slide", Title, Body


blank_slide Title:text, Body ->
// ----------------------------------------------------------------------------
//   Create an empty slide
// ----------------------------------------------------------------------------
    slide_master theme, "blank", Title, Body


main_title_slide Title:text, Body ->
// ----------------------------------------------------------------------------
//   Create a slide showing the main title of the slide show
// ----------------------------------------------------------------------------
    slide_master theme, "main", Title, Body


main_title_slide Title:text ->
// ----------------------------------------------------------------------------
//   Create a main title slide showing the name of the slide
// ----------------------------------------------------------------------------
    main_title_slide Title,
        title
            text Title


section_slide Title:text, Body ->
// ----------------------------------------------------------------------------
//   Create a section slide (transition between sections)
// ----------------------------------------------------------------------------
    slide_master theme, "section", Title, Body


section_slide Title:text ->
// ----------------------------------------------------------------------------
//   Create a section slide showing the section title
// ----------------------------------------------------------------------------
    section_slide Title,
        title
            text Title


title_slide Title:text, Body ->
// ----------------------------------------------------------------------------
//   Create a slide with just a title at the top
// ----------------------------------------------------------------------------
    slide_master theme, "title", Title,
        title
            text Title
        Body


picture_slide Title:text, Body ->
// ----------------------------------------------------------------------------
//   Create a slide for pictures, photos, animations
// ----------------------------------------------------------------------------
    slide_master theme, "picture", Title,
        title
            text Title
        picture Body


picture_only_slide Title:text, Body ->
// ----------------------------------------------------------------------------
//   Create a slide for pictures, photos, animations
// ----------------------------------------------------------------------------
    blank_slide Title,
        picture Body


slide Title:text, Body ->
// ----------------------------------------------------------------------------
//   Create a traditional slide with bullet points
// ----------------------------------------------------------------------------
    slide_master theme, "slide", Title,
        title
            text Title
        story Body



// ============================================================================
//
//    Slide structure
//
// ============================================================================

data slide_flow

title Body ->
// ----------------------------------------------------------------------------
//   Draw a title in a regular slide
// ----------------------------------------------------------------------------
    slide_flow["title"] := true
    theme_title theme, slide_master, Body


subtitle Body ->
// ----------------------------------------------------------------------------
//   Draw a subtitle in a regular slide
// ----------------------------------------------------------------------------
    slide_flow["subtitle"] := true
    theme_subtitle theme, slide_master, Body


picture Body ->
// ----------------------------------------------------------------------------
//   Box for picture, photos, animations
// ----------------------------------------------------------------------------
    slide_flow["picture"] := true
    theme_picture theme, slide_master, Body


story Body ->
// ----------------------------------------------------------------------------
//   Draw something as the story, i.e. a rectangle somewhere in the middle
// ----------------------------------------------------------------------------
    slide_flow["story"] := true
    theme_story theme, slide_master, Body


left_column Body ->
// ----------------------------------------------------------------------------
//   Draw something as the left side of the story
// ----------------------------------------------------------------------------
    slide_flow["left"] := true
    theme_left_column theme, slide_master, Body


right_column Body ->
// ----------------------------------------------------------------------------
//   Draw something as the right side of the story
// ----------------------------------------------------------------------------
    slide_flow["right"] := true
    theme_right_column theme, slide_master, Body


left_picture Body ->
// ----------------------------------------------------------------------------
//   Draw something as the left side of the picture
// ----------------------------------------------------------------------------
    slide_flow["leftpic"] := true
    theme_left_column_picture theme, slide_master, Body


right_picture Body ->
// ----------------------------------------------------------------------------
//   Draw something as the right side of the picture
// ----------------------------------------------------------------------------
    slide_flow["rightpic"] := true
    theme_right_column_picture theme, slide_master, Body


slide_reset Theme ->
// ----------------------------------------------------------------------------
//   Reset all flow variables
// ----------------------------------------------------------------------------
    slide_flow["title"] := false
    slide_flow["subtitle"] := false
    slide_flow["story"] := false
    slide_flow["left"] := false
    slide_flow["right"] := false
    slide_flow["leftpic"] := false
    slide_flow["rightpic"] := false


// ============================================================================
// 
//   Text boxes and text flows
// 
// ============================================================================

box X:real, Y:real, W:real, H:real, Body ->
// ----------------------------------------------------------------------------
//   Draw a box for an element kind
// ----------------------------------------------------------------------------
    theme_text theme, slide_master, "story", X, Y, W, H, Body


box Style:text, X:real, Y:real, W:real, H:real, Body ->
// ----------------------------------------------------------------------------
//   Draw a box for an element kind
// ----------------------------------------------------------------------------
    theme_text theme, slide_master, Style, X, Y, W, H, Body


box Style:text, X:real, Y:real, W:real, H:real ->
// ----------------------------------------------------------------------------
//   Draw a box for an element kind
// ----------------------------------------------------------------------------
    theme_box theme, slide_master, Style, X, Y, W, H


box X:real, Y:real, W:real, H:real ->
// ----------------------------------------------------------------------------
//   Draw a box for an element kind
// ----------------------------------------------------------------------------
    theme_box theme, slide_master, "story", X, Y, W, H


flow X:real, Y:real, W:real, H:real, Flow:text ->
// ----------------------------------------------------------------------------
//   Draw a given flow in the box
// ----------------------------------------------------------------------------
    flow_name -> ""
    flow_name := Flow
    if slide_flow[flow_name] then
        theme_text theme, slide_master, flow_name, X, Y, W, H,
            text_flow Flow
        slide_flow[flow_name] := false


flows X:real, Y:real, W:real, H:real, Flow1:text, Flow2:text ->
// ----------------------------------------------------------------------------
//   Draw a given flow in the box
// ----------------------------------------------------------------------------
    flow_name1 -> ""
    flow_name2 -> ""
    flow_name1 := Flow1
    flow_name2 := Flow2
    if slide_flow[flow_name1] then
        theme_text theme, slide_master, flow_name1, X, Y, W, H,
            text_flow Flow1
            if slide_flow[flow_name2] then
                paragraph_break
                text_flow Flow2
    else if slide_flow[flow_name2] then
        theme_text theme, slide_master, flow_name1, X, Y, W, H,
            text_flow Flow2

    slide_flow[flow_name1] := false
    slide_flow[flow_name2] := false


style Style ->
// ----------------------------------------------------------------------------
//   Apply a given style to a text
// ----------------------------------------------------------------------------
    theme_style theme, slide_master, Style



// ============================================================================
// 
//    Bullets
// 
// ============================================================================

*T -> bullet 1, T
// ----------------------------------------------------------------------------
//   Display a first-level bullet
// ----------------------------------------------------------------------------


**T -> bullet 2, T
// ----------------------------------------------------------------------------
//   Display a second-level bullet
// ----------------------------------------------------------------------------


***T -> bullet 3, T
// ----------------------------------------------------------------------------
//   Display a third-level bullet
// ----------------------------------------------------------------------------


****T -> bullet 4, T
// ----------------------------------------------------------------------------
//   Display a fourth-level bullet
// ----------------------------------------------------------------------------


-T -> text_item 1, T
// ----------------------------------------------------------------------------
//   Display a first-level text without bullet
// ----------------------------------------------------------------------------


--T -> text_item 2, T
// ----------------------------------------------------------------------------
//   Display a second-level text without bullet
// ----------------------------------------------------------------------------


---T -> text_item 3, T
// ----------------------------------------------------------------------------
//   Display a third-level text without bullet
// ----------------------------------------------------------------------------


----T -> text_item 4, T
// ----------------------------------------------------------------------------
//   Display a third-level text without bullet
// ----------------------------------------------------------------------------


--      -> text_item 2, " "
---     -> text_item 3, " "
// ----------------------------------------------------------------------------
//   Separators
// ----------------------------------------------------------------------------


+T -> numbered_item 1, T
// ----------------------------------------------------------------------------
//   Display a first-level numbered text
// ----------------------------------------------------------------------------


++T -> numbered_item 2, T
// ----------------------------------------------------------------------------
//   Display a second-level numbered text
// ----------------------------------------------------------------------------


+++T -> numbered_item 3, T
// ----------------------------------------------------------------------------
//   Display a third-level numbered text
// ----------------------------------------------------------------------------


++++T -> numbered_item 4, T
// ----------------------------------------------------------------------------
//   Display a third-level numbered text
// ----------------------------------------------------------------------------


bullet Level:integer, Block:block ->
// ----------------------------------------------------------------------------
//   Draw a bullet point with a given block (e.g. drawings)
// ----------------------------------------------------------------------------
    theme_bullet theme, slide_master, Level, Block


bullet Level:integer, Text:text ->
// ----------------------------------------------------------------------------
//   Draw a bullet point with a given text
// ----------------------------------------------------------------------------
    theme_bullet theme, slide_master, Level,
        text Text


text_item Level:integer, Block:block ->
// ----------------------------------------------------------------------------
//   Draw a given text without bullet point
// ----------------------------------------------------------------------------
    theme_item theme, slide_master, Level, Block


text_item Level:integer, Text:text ->
// ----------------------------------------------------------------------------
//   Draw a given text without bullet point
// ----------------------------------------------------------------------------
    theme_item theme, slide_master, Level,
        text Text


numbered_item Level:integer, Block:block ->
// ----------------------------------------------------------------------------
//   Draw a given text without bullet point
// ----------------------------------------------------------------------------
    theme_numbered_item theme, slide_master, Level, Block


numbered_item Level:integer, Text:text ->
// ----------------------------------------------------------------------------
//   Draw a given text without bullet point
// ----------------------------------------------------------------------------
    theme_numbered_item theme, slide_master, Level,
        text Text


data item_number



// ============================================================================
//
//    Smart rescaling of the contents
//
// ============================================================================

background Depth:real, Body ->
// ----------------------------------------------------------------------------
//   Draw something in the background. Backgrounds always fill the screen.
// ----------------------------------------------------------------------------
    if scaling_factor = 1.0 then
        locally
            scale_background
            ztrans_background Depth
            Body
            scaling_factor := 1.0
    else
        locally
            translatez Depth
            Body


contents Depth:real, Body ->
// ----------------------------------------------------------------------------
//   Draw contents, i.e. always fit in the screen
// ----------------------------------------------------------------------------
    if scaling_factor = 1.0 then
        locally
            scale_contents
            ztrans_contents Depth
            Body
            scaling_factor := 1.0
    else
        locally
            translatez Depth
            Body


// Two ways to scale contents when resizing the window :
// For background pictures, we'd rather not see some white around them,
// so we scale to crop the picture, using the ma function.
// For contents, on the other hand, we want to keep everything visible, so
// we scale to fit the contents, using the min function.
background_scale -> max(window_width/slide_width, window_height/slide_height)
contents_scale   -> min(window_width/slide_width, window_height/slide_height)
scale_background -> scale_all background_scale
scale_contents   -> scale_all contents_scale
scale_all S:real -> scale3 S; scaling_factor := scaling_factor * S
scale3 S:real    -> scale S, S, S
scaling_factor -> 1.0


ztrans_contents Z:real ->
// ----------------------------------------------------------------------------
//   Translate a content in Z without a change in apparent dimensions
// ----------------------------------------------------------------------------
    Z0 -> camera_position at 3
    translatez Z/contents_scale
    scale3 (Z0-Z)/Z0


ztrans_background Z:real ->
// ----------------------------------------------------------------------------
//    Translate a backgtround in Z without a change in apparent dimensions
// ----------------------------------------------------------------------------
    Z0 -> camera_position at 3
    translatez Z/background_scale
    scale3 (Z0-Z)/Z0
