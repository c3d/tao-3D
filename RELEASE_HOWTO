Here are the steps to create a new (official) release of Tao3D

1) BUILDING

Once:

- Make sure the code is up-to-date (git pull, git submodule update, git status).
- Update NEWS.
- Update version.pri if needed.
- See if the version of some modules needs updating. To get the list of modules
  that have changed since the last public release (for example, 1.01):
  $ cd modules ; ./check_changes.sh 1.01
  If some modules changed, increment their version number (typically in
  modulename/modulename.xl, modulename/doc/Doxyfile.in but also where the module
  checks for licenses: grep for hasLicense, checkLicense, check_license).
- Configure for full build (no part of the code #idef'ed out):
  $ ./configure --with-eula internal
- Make sure Qt translations are up-to-date
  $ cd tao
  $ make lupdate
  Look at the output of lupdate, and edit tao_fr.ts as needed.
  ** Warning: make sure you gave no edition name to the configure script, or
  some code will be #ifdef'ed out and some translations will be marked obsolete.
  After editing tao_fr.ts:
  $ make lrelease
  Commit your translations (both tao_fr.ts AND tao_fr.qm need to be committed).
  Do the same for all modules that have *.ts files.
- Make sure tao.xl translations are up-to-date
  $ ./extract_tr.pl -ref tao_fr.xl tao.xl.in
  If the command returns nothing, there is nothing to do, otherwise append
  translations to tao_fr.xl, and commit.
- There is no easy way to make sure other translations (e.g., module/template
  descriptions) are up-to-date :(
- Create a temporary tag (will be visible on splash screen), for instance:
  $ git tag 1.0-beta5
  $ git tag 1.46

On all platforms:

- Pull and make sure the tag is known locally by running:
  $ app/updaterev.sh -n
  (otherwise '$ git fetch --tags' or create a local tag).
- Build Tao and make packages:
  $ ./build_all.sh
- If some modules that are not packaged with Tao have been modified since the
  last build (currently: Alioscopy, 2D-plus-Depth and Tridelity display modules),
  build them:
  $ ./configure modules+=+display_alioscopy modules+=+display_2dplusdepth \
                modules+=+display_tridelity
  $ make -j3 install

Once:

- Build the Tao documentation for the web site:
  $ ./make_doc_tarball.sh
- Create an annotated tag with the MD5 hash of all kits.
  Take inspiration from 'git show 1.0-beta4' for instance.
  $ git tag -a 1.0-beta5


2) PUBLISHING

- Upload Tao packages to taodyne.com:
  scp <files> www-data@www.taodyne.com:/var/www/downloads
- Update the symbolic links to the downloads:
    cd /var/www
    sh create_links.sh <new version>  # example: 1.41
  Then copy/paste the commands after reviewing them.
  For information, the symbolic links are used:
    * in the product comparison pages (in the PrestaShop CMS backend:
      Tools/CMS, products/compare)
    * in the PrestaShop product pages (under modules/Other modules/
      Multidéclinaison téléchargeable, Configure).
- Update the product version in the product pages.
- Update the info file for the "Check for update" feature:
    vi /var/www/tao_update_info.ini
- Update documentation:
  scp taodoc*.tar.xz www-data@www.taodyne.com:/var/www/docs
  Extract the file, it will create taodoc-*/{modules,help}.
  Replace /var/www/docs/{modules,help} with the new ones.
    V=1.41 ; mv help help_ ; mv modules modules_ ; \
             mv taodoc-$V/help . ; mv taodoc-$V/modules .
  Quick-check http://www.taodyne.com/docs/help/en/
              http://www.taodyne.com/docs/help/fr/
              http://www.taodyne.com/docs/modules/lens_flare/en/
              http://www.taodyne.com/docs/modules/lens_flare/fr/
- Upload the modules that have been modified, update the repositories
  under git/modules.
