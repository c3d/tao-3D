// ****************************************************************************
//  table.tbl                                                       Tao project
// ****************************************************************************
//
//   File Description:
//
//     Description of table information
//
//
//
//
//
//
//
//
// ****************************************************************************
// This document is released under the GNU General Public License.
// See http://www.gnu.org/copyleft/gpl.html and Matthew 25:22 for details
//  (C) 2011 Christophe de Dinechin <christophe@taodyne.com>
//  (C) 2011 Taodyne SAS
// ****************************************************************************

// ============================================================================
//
//   Tables
//
// ============================================================================

PREFIX(NewTableAt,  tree,  "table",
       PARM(x,real, )
       PARM(y, real, )
       PARM(r,integer, )
       PARM(c,integer, )
       PARM(b,code, ),
       RTAO(newTable(context, self, x, y, r, c, b)),
       GROUP()
       SYNOPSIS("")
       DESCRIPTION(""))
PREFIX(NewTable,  tree,  "table",
       PARM(r,integer, "x-coordinate of the table. 0 if not specified.")
       PARM(c,integer, "y-coordinate of the table. 0 if not specified.")
       PARM(b,code, "The number of row"),
       RTAO(newTable(context, self, r, c, b)),
       GROUP(table)
       SYNOPSIS("Create a table")
       DESCRIPTION("Create a new table. The body is executed in the environement of the tablethat means short name can be used for table description")
       RETURNS(tree, "The result of the body (b) evaluation."))
PREFIX(TableSizedCell,  tree,  "table_cell",
       PARM(w, real, )
       PARM(h, real, )
       PARM(b, code, ),
       RTAO(tableCell(context, self, w, h, b)),
       GROUP()
       SYNOPSIS("")
       DESCRIPTION(""))
PREFIX(TableCell,  tree,  "table_cell",
       PARM(b, code, "width of the cell if specified, otherwise free size."),
       RTAO(tableCell(context, self, b)),
       GROUP(table)
       SYNOPSIS("Define a free-size cell in the table")
       DESCRIPTION("Define a cell in the context of the table. Short name 'cell' can be used with both syntaxes.")
       RETURNS(tree, "body evaluation result"))
PREFIX(TableMargins2,  tree,  "table_cell_margins",
       PARM(w, real, )
       PARM(h, real, ),
       RTAO(tableMargins(self, w, h)),
       GROUP()
       SYNOPSIS("")
       DESCRIPTION(""))
PREFIX(TableMargins,  tree,  "table_cell_margins",
       PARM(x, real, "x-coordinate of the table. 0 if not specified.")
       PARM(y, real, "y-coordinate of the table. 0 if not specified.")
       PARM(w, real, "width of the cell if specified, otherwise free size.")
       PARM(h, real, "height of the cell if specified, otherwise free size."),
       RTAO(tableMargins(self, x, y, w, h)),
       GROUP(table)
       SYNOPSIS("Set the margin rectangle for the table.")
       DESCRIPTION("Set the margin rectangle for the table. The short name of the function is margins. It can be used with both syntaxes."))
PREFIX(TableFill,  tree,  "table_cell_fill",
       PARM(b, code, "fill code body."),
       RTAO(tableFill(self, b)),
       GROUP(table)
       SYNOPSIS("fill of the cell")
       DESCRIPTION("Define the fill code for cells"))
PREFIX(TableBorder,  tree,  "table_cell_border",
       PARM(b, code, "border code body."),
       RTAO(tableBorder(self, b)),
       GROUP(table)
       SYNOPSIS("Define the border code for cells")
       DESCRIPTION("Define the border code for cells. The short name is border."))
PREFIX(TableCellX,  tree,  "table_cell_x", , RTAO(tableCellX(self)),
       GROUP(table)
       SYNOPSIS("x-ccordinate of the cell center")
       DESCRIPTION("Get the horizontal center of the current table cell")
       RETURNS(tree, "The coordinate of the center of the current cell on x-axis"))
PREFIX(TableCellY,  tree,  "table_cell_y", , RTAO(tableCellY(self)),
       GROUP(table)
       SYNOPSIS("y-ccordinate of the cell center")
       DESCRIPTION("Get the vertical center of the current table cell")
       RETURNS(tree, "The coordinate of the center of the current cell on y-axis"))
PREFIX(TableCellW,  tree,  "table_cell_w", , RTAO(tableCellW(self)),
       GROUP(table)
       SYNOPSIS("Width of the cell")
       DESCRIPTION("Get the horizontal size of the current table cell")
       RETURNS(tree, "The size of the current cell along the x-axis"))
PREFIX(TableCellH,  tree,  "table_cell_h", , RTAO(tableCellH(self)),
       GROUP(table)
       SYNOPSIS("Height of the cell.")
       DESCRIPTION("Get the vertical size of the current table cell")
       RETURNS(tree, "The size of the current cell along the y-axis"))
PREFIX(TableRow,  tree,  "table_cell_row", , RTAO(tableRow(self)),
       GROUP(table)
       SYNOPSIS("Return the current row")
       DESCRIPTION("Return the current row index")
       RETURNS(tree, "the row index"))
PREFIX(TableColumn,  tree,  "table_cell_column", , RTAO(tableColumn(self)),
       GROUP(table)
       SYNOPSIS("Return the current column")
       DESCRIPTION("Return the current column index.")
       RETURNS(tree, "The column index."))
PREFIX(TableRows,  tree,  "table_rows", , RTAO(tableRows(self)),
       GROUP(table)
       SYNOPSIS("number of rows in the current table")
       DESCRIPTION("Return the number of rows in the current table")
       RETURNS(tree, "Number of rows in the table"))
PREFIX(TableColumns,  tree,  "table_columns", , RTAO(tableColumns(self)),
       GROUP(table)
       SYNOPSIS("number of columns in the current table")
       DESCRIPTION("Return the number of columns in the current table")
       RETURNS(tree, "number of columns in the table"))



