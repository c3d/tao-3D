// *****************************************************************************
// shapes3d.tbl                                                    Tao3D project
// *****************************************************************************
//
// File description:
//
//     Description of 3D shapes
//
//
//
//
//
//
//
//
// *****************************************************************************
// This software is licensed under the GNU General Public License v3
// (C) 2011,2019, Christophe de Dinechin <christophe@dinechin.org>
// *****************************************************************************
// This file is part of Tao3D
//
// Tao3D is free software: you can r redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Tao3D is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Tao3D, in a file named COPYING.
// If not, see <https://www.gnu.org/licenses/>.
// *****************************************************************************


// ============================================================================
//
//   3D primitives
//
// ============================================================================

PREFIX(Sphere,  tree,  "sphere",
       PARM(x, real, "x-coordinate")
       PARM(y, real, "y-coordinate")
       PARM(z, real, "z-coordinate")
       PARM(w, real, "width")
       PARM(h, real, "height")
       PARM(d, real, "depth")
       PARM(slices, integer, "number of slices")
       PARM(stacks, integer, "[TODO]"),
       RTAO(sphere(self, x, y, z, w, h, d, slices, stacks)),
       GROUP(graph)
       SYNOPSIS("sphere like")
       DESCRIPTION("GL sphere [TODO or ovoid ? Add the incidence of slices and stacks on the sphere rendering time.]"))
PREFIX(Torus,  tree,  "torus",
       PARM(x, real, "x-coordinate")
       PARM(y, real, "y-coordinate")
       PARM(z, real, "z-coordinate")
       PARM(w, real, "width")
       PARM(h, real, "height")
       PARM(d, real, "depth")
       PARM(slices, integer, "number of slices")
       PARM(stacks, integer, "number of stacks")
       PARM(r, real, "radius"),
       RTAO(torus(self, x, y, z, w, h, d, slices, stacks, r)),
       GROUP(graph)
       SYNOPSIS("torus like")
       DESCRIPTION("torus[TODO]")
       RETURNS(tree, ""))
PREFIX(Cube,  tree,  "cube",
       PARM(x, real, "x-coordinate")
       PARM(y, real, "y-coordinate")
       PARM(z, real, "z-coordinate")
       PARM(w, real, "width")
       PARM(h, real, "height")
       PARM(d, real, "depth"),
       RTAO(cube(self, x, y, z, w, h, d)),
       GROUP(graph)
       SYNOPSIS("cube like")
       DESCRIPTION("parallelepiped rectangle"))
PREFIX(Cone,  tree,  "cone",
       PARM(x, real, "x-coordinate")
       PARM(y, real, "y-coordinate")
       PARM(z, real, "z-coordinate")
       PARM(w, real, "width")
       PARM(h, real, "height")
       PARM(d, real, "depth"),
       RTAO(cone(self, x, y, z, w, h, d, 0.0)),
       GROUP(graph)
       SYNOPSIS("cone")
       DESCRIPTION("cone[TODO]"))
PREFIX(Cylinder,  tree,  "cylinder",
       PARM(x, real, "x-coordinate")
       PARM(y, real, "y-coordinate")
       PARM(z, real, "z-coordinate")
       PARM(w, real, "width")
       PARM(h, real, "height")
       PARM(d, real, "depth"),
       RTAO(cone(self, x, y, z, w, h, d, 1.0)),
       GROUP(graph)
       SYNOPSIS("cylinder")
       DESCRIPTION("cylinder[TODO]"))
PREFIX(TruncatedCone,  tree,  "truncated_cone",
       PARM(x, real, "x-coordinate")
       PARM(y, real, "y-coordinate")
       PARM(z, real, "z-coordinate")
       PARM(w, real, "width")
       PARM(h, real, "height")
       PARM(d, real, "depth")
       PARM(r, real, "percentage of basis : 0.0 is a cone; 1.0 is a cylinder."),
       RTAO(cone(self, x, y, z, w, h, d, r)),
       GROUP(graph)
       SYNOPSIS("truncated cone")
       DESCRIPTION("truncated cone[TODO]"))
