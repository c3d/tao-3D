// ****************************************************************************
//  graphics_state.tbl                                             Tao project 
// ****************************************************************************
// 
//   File Description:
// 
//     List of the various graphics states to save/restore
// 
// 
// 
// 
// 
// 
// 
// 
// ****************************************************************************
//  (C) 2011 Christophe de Dinechin <christophe@taodyne.com>
//  (C) 2011 Taodyne SAS
// ****************************************************************************

#ifndef GFLAG
#define GFLAG(name)             GS(bool, glflag_##name)
#endif
#ifndef GCLIENTSTATE
#define GCLIENTSTATE(name)      GS(bool, glclientstate_##name)
#endif

GS(TexturesState,           textures)
GS(TextureUnitsState,       textureUnits)
GS(ClientTextureUnitsState, clientTextureUnits)
GS(LightsState,             lights)
GS(ClipPlanesState,         clipPlanes)
GS(Matrix4,                 mvMatrix)
GS(Matrix4,                 projMatrix)
GS(GLenum,                  matrixMode)
GS(ViewportState,           viewport)
GS(GLenum,                  bufferMode)
GS(GLuint,                  listBase)
GS(coord,                   pointSize)
GS(PolygonOffsetState,      polygonOffset)
GS(Tao::Color,              color)
GS(Tao::Color,              clearColor)
GS(Tao::Color,              frontAmbient)
GS(Tao::Color,              frontDiffuse)
GS(Tao::Color,              frontSpecular)
GS(Tao::Color,              frontEmission)
GS(float,                   frontShininess)
GS(Tao::Color,              backAmbient)
GS(Tao::Color,              backDiffuse)
GS(Tao::Color,              backSpecular)
GS(Tao::Color,              backEmission)
GS(float,                   backShininess)
GS(GLenum,                  shadeMode)
GS(GLfloat,                 lineWidth)
GS(LineStippleState,        stipple)
GS(GLenum,                  cullMode)
GS(GLenum,                  frontFace)
GS(GLboolean,               depthMask)
GS(GLenum,                  depthFunc)
GS(GLenum,                  textureCompressionHint)
GS(GLenum,                  perspectiveCorrectionHint)
GS(BlendFunctionState,      blendFunction)
GS(GLenum,                  blendEquation)
GS(AlphaFunctionState,      alphaFunc)
GS(GLenum,                  renderMode)
GS(GLuint,                  shaderProgram)
GS(GLuint,                  activeTexture)
GS(GLenum,                  clientActiveTexture)
GS(bool,                    hasPixelBlur) // Pixels not aligning naturally

GCLIENTSTATE(GL_VERTEX_ARRAY)
GCLIENTSTATE(GL_NORMAL_ARRAY)
GCLIENTSTATE(GL_COLOR_ARRAY)
GFLAG(GL_LINE_STIPPLE)
GFLAG(GL_COLOR_MATERIAL)
GFLAG(GL_MULTISAMPLE)
GFLAG(GL_LIGHTING)
GFLAG(GL_NORMALIZE)
GFLAG(GL_CULL_FACE)
GFLAG(GL_TEXTURE_RECTANGLE_ARB)
GFLAG(GL_LINE_SMOOTH)
GFLAG(GL_POINT_SMOOTH)
GFLAG(GL_POLYGON_OFFSET_FILL)
GFLAG(GL_POLYGON_OFFSET_LINE)
GFLAG(GL_POLYGON_OFFSET_POINT)
GFLAG(GL_BLEND)
GFLAG(GL_ALPHA_TEST)
GFLAG(GL_DEPTH_TEST)
GFLAG(GL_STENCIL_TEST)

#undef GS
#undef GFLAG
#undef GCLIENTSTATE
